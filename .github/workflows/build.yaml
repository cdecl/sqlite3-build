name: sqlite3 build

# on:
#   push:
#     paths:
#     - '.github/workflows/ccpp.yml'

on: 
  workflow_dispatch:
    inputs:
      name:
        description: 'workflow start'

jobs:
  build-linux:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2

    - name: download src 
      run: | 
        curl -O https://www.sqlite.org/2022/sqlite-amalgamation-3390400.zip
        unzip -j sqlite-amalgamation-3390400.zip -d sqlite
        cp CMakeLists.txt sqlite/

    - name: install cmake
      run: |
        export DEBIAN_FRONTEND=noninteractive
        sudo apt update -y && sudo apt install cmake -y

    - name: build
      run: |
        cd sqlite
        cmake -B build . 
        cd build 
        cmake --build .
        mkdir -p release
        cp sqlite3 release

    - name: upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: release-linux
        path: sqlite/build/release

  build-windows:
    runs-on: windows-2019
    
    steps:
    - uses: actions/checkout@v2

    - name: install curl, unzip
      run: choco install curl unzip -y

    - name: download src 
      run: | 
        curl -O https://www.sqlite.org/2022/sqlite-amalgamation-3390400.zip
        unzip -j sqlite-amalgamation-3390400.zip -d sqlite
        copy CMakeLists.txt sqlite

    - name: build
      run: |
        cd sqlite
        cmake -B build . 
        cd build 
        cmake --build . --config Release

    - name: upload artifact
      uses: actions/upload-artifact@v1
      with:
        name: release-windows
        path: sqlite/build/release

    # - name: build
    #   run: |
    #     cd src 
    #     msbuild asb.vcxproj /p:configuration=release /p:platform=x64
        
    # - name: test
    #   shell: cmd
    #   run: |
    #     cd src\x64\release
    #     asb.exe --test http://httpbin.org/get
    #     cd ..\..\..\
    #     mkdir release
    #     copy src\x64\release\asb.exe release\
   
    # - name: upload artifact
    #   uses: actions/upload-artifact@v1
    #   with:
    #     name: release-win
    #     path: release
 
  # build-release:
  #   needs: 
  #     - build-linux
  #     - build-win
  #   runs-on: ubuntu-latest
    
  #   steps:
  #   - name: download artifact
  #     uses: actions/download-artifact@v1
  #     with:
  #       name: release-win   
  #   - name: download artifact
  #     uses: actions/download-artifact@v1
  #     with:
  #       name: release-linux      
  #   - name: zip
  #     run: |
  #       zip -r asb.zip release-win release-linux 
        
  #   - name: Create Release
  #     id: create_release
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  
  #     uses: actions/create-release@v1
  #     with:
  #       tag_name: '1.6'
  #       release_name: Release '1.6'
  #       draft: false
  #       prerelease: false

  #   - name: upload release asset 
  #     uses: actions/upload-release-asset@v1
  #     env:
  #       GITHUB_TOKEN: ${{ secrets.TOKEN }}
  #     with:
  #       upload_url: ${{ steps.create_release.outputs.upload_url }}  
  #       asset_path: ./asb.zip
  #       asset_name: asb.zip
  #       asset_content_type: application/zip